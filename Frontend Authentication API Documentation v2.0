Frontend Authentication API Documentation v2.0
نکات کلیدی معماری
Base URL: https://backend.lingudesk.net
Access Token: در Header با فرمت Bearer TOKEN ارسال می‌شود
Refresh Token: در httpOnly cookie ذخیره می‌شود (JavaScript دسترسی ندارد)
Device ID: برای هر دستگاه یکتا و در localStorage ذخیره می‌شود
Response Format: JSON برای همه پاسخ‌ها
CORS: تمام endpoint ها باید credentials: include را پشتیبانی کنند

1. User Registration & Verification
1.1 Register New User
Endpoint: POST /auth/register
 Authentication: Not required
 Rate Limit: 20 requests per minute per IP
Request Headers:
Content-Type: application/json

Request Body:
{
  name: string;           // حداقل 2 کاراکتر
  family_name: string;    // حداقل 2 کاراکتر
  email: string;          // فرمت معتبر ایمیل
  password: string;       // حداقل 8 کاراکتر، باید شامل حروف، عدد و نماد باشد
  address?: string;       // اختیاری
  phone?: string;         // اختیاری، فرمت: +[کد کشور][شماره]
  device_id: string;      // شناسه یکتای دستگاه
}

Success Response (200 OK):
{
  "success": true,
  "message": "Registration successful. Please check your email for verification code."
}

Error Responses:
400 Bad Request: {"detail": "Email already exists"}
422 Validation Error: {"detail": "Password must contain at least one letter, one number, and one symbol"}

1.2 Verify Email
Endpoint: POST /auth/verify
 Authentication: Not required
 Rate Limit: 20 requests per minute per IP
 Cookie Handling: Server sets httpOnly refresh token cookie
Request Body:
{
  email: string;
  verification_code: string;  // 6 رقم عددی
  device_id: string;
}

Success Response (200 OK):
{
  "access_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...",
  "token_type": "Bearer",
  "expires_in": 1800,
  "refresh_token_set": true,
  "user": {
    "id": "a1b2c3d4e5",
    "email": "user@example.com",
    "name": "John",
    "family_name": "Doe",
    "role": "user",
    "status": "active",
    "created_at": "2025-01-01T00:00:00Z",
    "metadata": {},
    "two_fa_enabled": false
  }
}

Set-Cookie Header:
refresh_token=[encrypted_token]; HttpOnly; Secure; SameSite=Lax; Path=/; Max-Age=604800


1.3 Resend Verification Code
Endpoint: POST /auth/resend-verification
 Authentication: Not required
 Rate Limit: 5 requests per hour per email
Request Body:
{
  email: string;
}

Success Response (200 OK):
{
  "success": true,
  "message": "Verification code sent successfully"
}


2. User Login
2.1 Email Login
Endpoint: POST /auth/login
 Authentication: Not required
 Rate Limit: 20 requests per minute per IP, exponential backoff for failed attempts
Request Body:
{
  email: string;
  password: string;
  device_id: string;
  device_name: string;  // مثال: "Chrome on Windows"
}

Success Response (200 OK):
{
  "access_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...",
  "token_type": "Bearer",
  "expires_in": 1800,
  "refresh_token_set": true,
  "user": {
    "id": "a1b2c3d4e5",
    "email": "user@example.com",
    "name": "John",
    "family_name": "Doe",
    "role": "admin",
    "status": "active",
    "created_at": "2025-01-01T00:00:00Z",
    "two_fa_enabled": true
  }
}

2FA Required Response (200 OK):
{
  "requires_2fa": true,
  "session_id": "temp_session_123456",
  "expires_in": 600
}


2.2 Google OAuth Login
Endpoint: POST /auth/google
 Authentication: Not required
 Rate Limit: 20 requests per minute per IP
Request Headers:
Content-Type: application/json
X-Device-ID: device_123456

Request Body:
{
  token: string;      // Google ID token از Google Sign-In
  device_id: string;
}

Success Response: مشابه Email Login

2.3 Two-Factor Authentication Verify
Endpoint: POST /auth/2fa/verify
 Authentication: Not required
Request Body:
{
  session_id: string;
  code: string;        // 6 رقم
  device_id: string;
}

Success Response: مشابه Email Login با set کردن httpOnly cookie

2.4 Resend 2FA Code
Endpoint: POST /auth/2fa/resend
Request Body:
{
  session_id: string;
}


3. Token Management
3.1 Refresh Access Token
Endpoint: POST /auth/refresh
 Authentication: Requires valid refresh token in httpOnly cookie
 Cookie Requirement: Must include cookies with request
Request Headers:
Content-Type: application/json
X-Device-ID: device_123456

Request Body: Empty or:
{
  "device_id": "device_123456"
}

Success Response (200 OK):
{
  "access_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...",
  "token_type": "Bearer",
  "expires_in": 1800,
  "refresh_token_set": true,
  "user": {
    "id": "a1b2c3d4e5",
    "email": "user@example.com",
    "name": "John",
    "family_name": "Doe",
    "role": "user",
    "status": "active",
    "created_at": "2025-01-01T00:00:00Z"
  }
}

Note: Server may rotate refresh token and set new httpOnly cookie

3.2 Logout
Endpoint: POST /auth/logout
 Authentication: Optional (for authenticated logout)
 Cookie Handling: Server clears httpOnly cookies
Request Headers:
Authorization: Bearer [access_token] (optional)
Content-Type: application/json

Request Body:
{
  logout_all: boolean;  // true: logout from all devices
}

Success Response (200 OK):
{
  "success": true,
  "message": "Logged out successfully",
  "revoked_sessions": 3
}

Set-Cookie Header (clears cookie):
refresh_token=; HttpOnly; Secure; SameSite=Lax; Path=/; Max-Age=0


4. Password Management
4.1 Forgot Password
Endpoint: POST /auth/forgot-password
 Authentication: Not required
 Rate Limit: 3 requests per hour per email
Request Body:
{
  email: string;
}

Success Response (200 OK):
{
  "success": true,
  "message": "Password reset email sent successfully"
}


4.2 Reset Password
Endpoint: POST /auth/reset-password
 Authentication: Not required
Request Body:
{
  token: string;         // از لینک ایمیل
  new_password: string;  // رعایت قوانین password
}

Success Response (200 OK):
{
  "success": true,
  "message": "Password reset successful"
}


4.3 Change Password (Authenticated)
Endpoint: POST /auth/change-password
 Authentication: Required
Request Headers:
Authorization: Bearer [access_token]
Content-Type: application/json

Request Body:
{
  current_password: string;
  new_password: string;
}


5. Session Management
5.1 Get Active Sessions
Endpoint: GET /auth/sessions
 Authentication: Required
Request Headers:
Authorization: Bearer [access_token]

Success Response (200 OK):
{
  "sessions": [
    {
      "device_id": "device_123456",
      "device_name": "Chrome on Windows",
      "ip_address": "192.168.1.1",
      "created_at": "2025-01-01T00:00:00Z",
      "last_used_at": "2025-01-01T12:00:00Z",
      "is_current": true,
      "storage_type": "httponly_cookie",
      "security_level": "high"
    }
  ]
}


5.2 Revoke Specific Session
Endpoint: DELETE /auth/sessions/{device_id}
 Authentication: Required
Success Response (200 OK):
{
  "success": true,
  "message": "Session revoked successfully"
}


6. Health Check
6.1 Service Health
Endpoint: GET /health
 Authentication: Not required
Success Response (200 OK):
{
  "status": "healthy",
  "security_mode": "httponly_cookies",
  "timestamp": "2025-01-01T00:00:00Z"
}


JWT Token Structure
Access Token Claims:
{
  "user_id": "a1b2c3d4e5",
  "email": "user@example.com",
  "name": "John Doe",
  "role": "user|admin|premium",
  "exp": 1234567890,
  "iat": 1234567890,
  "jti": "unique_token_id",
  "fph": "device_fingerprint_hash"
}


Error Response Format
تمام خطاها باید این ساختار را داشته باشند:
{
  "detail": "Error message in English",
  "message": "User-friendly error message",
  "code": "ERROR_CODE",
  "status": 400
}

Common Error Codes:
INVALID_CREDENTIALS - ایمیل یا پسورد اشتباه
TOKEN_EXPIRED - توکن منقضی شده
TOKEN_INVALID - توکن نامعتبر
ACCOUNT_SUSPENDED - حساب معلق شده
EMAIL_NOT_VERIFIED - ایمیل تایید نشده
DEVICE_LIMIT_EXCEEDED - تعداد دستگاه‌ها بیش از حد
RATE_LIMIT_EXCEEDED - تعداد درخواست بیش از حد
2FA_REQUIRED - نیاز به احراز هویت دو عاملی
SESSION_EXPIRED - جلسه موقت منقضی شده

Security Headers Required
تمام پاسخ‌ها باید شامل این هدرها باشند:
X-Content-Type-Options: nosniff
X-Frame-Options: DENY
X-XSS-Protection: 1; mode=block
Strict-Transport-Security: max-age=31536000; includeSubDomains
Content-Security-Policy: default-src 'self'


Rate Limiting Headers
در صورت محدودیت rate limit:
X-RateLimit-Limit: 20
X-RateLimit-Remaining: 5
X-RateLimit-Reset: 1234567890
Retry-After: 60


CORS Configuration
Allowed Origins:
https://lingudesk.com
https://www.lingudesk.com
http://localhost:5173 (development)
http://localhost:4173 (preview)
Allowed Methods:
GET, POST, PUT, DELETE, OPTIONS
Allowed Headers:
Authorization
Content-Type
X-Device-ID
Exposed Headers:
X-RateLimit-*
Retry-After
Credentials:
Must be set to true for cookie support

نکات مهم پیاده‌سازی
User ID Format: 10 کاراکتر alphanumeric با استفاده از Base32 Crockford (بدون 0/O و I/l)


Password Requirements:


حداقل 8 کاراکتر
حداقل یک حرف بزرگ
حداقل یک حرف کوچک
حداقل یک عدد
حداقل یک نماد
Token Expiration:


Access Token: 15-30 دقیقه (قابل تنظیم)
Refresh Token: 7 روز (در httpOnly cookie)
2FA Session: 10 دقیقه
HttpOnly Cookie Settings:

 HttpOnly: true
Secure: true (HTTPS only)
SameSite: Lax
Path: /
Domain: .lingudesk.net (for subdomain support)


Role-Based Access:


user: دسترسی عادی
premium: دسترسی به امکانات پیشرفته
admin: دسترسی کامل به سیستم
Account Status:


active: فعال
suspended: معلق
banned: مسدود

Test Endpoints (Development Only)
Get Public Key for JWT Verification
Endpoint: GET /auth/public-key
 Note: Internal only, not exposed to frontend
Response:
{
  "public_key": "-----BEGIN PUBLIC KEY-----\n...\n-----END PUBLIC KEY-----",
  "algorithm": "RS256",
  "key_id": "key_2025_01"
}


آخرین بروزرسانی: ژانویه 2025
 نسخه مستند: 2.0

